digraph "particle" {
rankdir=BT
charset="utf-8"
"PP2_Particle_Filter.particle_filter.ParticleTemplate.Particle" [color="black", fontcolor="black", label="{Particle|particle_dim : int\lrng\l|create_gaussian_particles(N: int, track_dim: int, init_pos: np.ndarray, std: np.ndarray): np.ndarray\lcreate_uniform_particles(N: int, track_dim: int, ranges: np.ndarray): np.ndarray\lmeasurement_model(coeff_sim: np.ndarray, R: np.ndarray): np.ndarray\lmotion_model(particles: np.ndarray, Q_model: np.ndarray, prev_particles: np.ndarray, frame_size: Tuple[int, int], dt: float): np.ndarray\l}", shape="record", style="solid"];
"PP2_Particle_Filter.particle_filter.Particle.PredPosParticle2DBbox" [color="black", fontcolor="black", label="{PredPosParticle2DBbox|particle_dim : int\lratio\lrng\l|compute_gamma(N: int, track_dim: int): np.ndarray\lcreate_gaussian_particles(N: int, track_dim: int, init_pos: np.ndarray, std: np.ndarray): np.ndarray\lcreate_uniform_particles(N: int, track_dim: int, ranges: np.ndarray): np.ndarray\lmeasurement_model(coeff_sim: np.ndarray, particles: np.ndarray, template_particle: np.ndarray, R: np.ndarray): np.ndarray\lmotion_model(particles: np.ndarray, Q_model: np.ndarray, prev_particles: np.ndarray, template_particle: np.ndarray, search_area: Tuple[int, int], frame_size: Tuple[int, int], dt: float): np.ndarray\l}", shape="record", style="solid"];
"PP2_Particle_Filter.particle_filter.Particle.ConstAccelParticle2DBbox" [color="black", fontcolor="black", label="{ConstAccelParticle2DBbox|particle_dim : int\lrng\l|compute_gamma(N: int, track_dim: int): np.ndarray\lcreate_gaussian_particles(N: int, track_dim: int, init_pos: np.ndarray, std: np.ndarray): np.ndarray\lcreate_uniform_particles(N: int, track_dim: int, ranges: np.ndarray): np.ndarray\lmeasurement_model(coeff_sim: np.ndarray, particles: np.ndarray, template_particle: np.ndarray, R: np.ndarray): np.ndarray\lmotion_model(particles: np.ndarray, Q_model: np.ndarray, prev_particles: np.ndarray, template_particle: np.ndarray, search_area: np.ndarray, frame_size: Tuple[int, int], dt: float): np.ndarray\l}", shape="record", style="solid"];
"PP2_Particle_Filter.particle_filter.Particle.ConstAccelParticle2DFixBbox" [color="black", fontcolor="black", label="{ConstAccelParticle2DFixBbox|particle_dim : int\lrng\l|create_gaussian_particles(N: int, track_dim: int, init_pos: np.ndarray, std: np.ndarray): np.ndarray\lcreate_uniform_particles(N: int, track_dim: int, ranges: np.ndarray): np.ndarray\lmeasurement_model(coeff_sim: np.ndarray, particles: np.ndarray, template_particle: np.ndarray, R: np.ndarray): np.ndarray\lmotion_model(particles: np.ndarray, Q_model: np.ndarray, prev_particles: np.ndarray, template_particle: np.ndarray, search_area: Tuple[int, int], frame_size: Tuple[int, int], dt: float): np.ndarray\l}", shape="record", style="solid"];
"PP2_Particle_Filter.particle_filter.Particle.ConstAccelParticle2DBbox" -> "PP2_Particle_Filter.particle_filter.ParticleTemplate.Particle" [arrowhead="empty", arrowtail="none"];
"PP2_Particle_Filter.particle_filter.Particle.ConstAccelParticle2DFixBbox" -> "PP2_Particle_Filter.particle_filter.ParticleTemplate.Particle" [arrowhead="empty", arrowtail="none"];
"PP2_Particle_Filter.particle_filter.Particle.PredPosParticle2DBbox" -> "PP2_Particle_Filter.particle_filter.ParticleTemplate.Particle" [arrowhead="empty", arrowtail="none"];
}